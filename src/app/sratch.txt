navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {
      // this.recordStream(stream)
      // this.analyze3D(stream)
      // let destinationStream = this.webAudioContext.createMediaStreamDestination()
    
      console.log('des stream', destinationStream)

      this.recordStream(destinationStream.stream)
      this.analyze3D(destinationStream)
      
      // if(!(this.webAudioContext.state === 'suspended')) {
      //   console.log('running')
      //   this.recordStream(stream)
      //   this.analyze3D(stream)
      // }

      console.log('audio state::', this.webAudioContext.state)
      

    

      // if(this.webAudioContext.state === 'suspended') {
      //   this.webAudioContext.resume().then(function() {
      //     console.log('resuming')
      //   });
      // }
  
      // if(resFlag) {
      //   this.webAudioContext.resume()
      // }
    })


    ****************** time seek 
    
<!-- 
     audioFile.addEventListener('timeupdate',function (){
    	var duration = parseInt(audioFile.duration, 10);
    	var elapsed = parseInt(audioFile.duration - audioFile.currentTime, 10);
    	$("#handle").attr("max", parseInt(audioFile.duration, 10));
        $("#handle").val(audioFile.currentTime);
        $('#timeleft').text(convertTime(elapsed));
        $('#length').text(convertTime(duration));
    });   
    
    //convert time given in seconds to min:sec format
    function convertTime (time) {
    	var min = Math.floor(parseInt((time/60), 10));
    	var sec = time - min*60;
    	return (min + ':' + (sec > 9 ? sec : '0' + sec));
    	
    }
    
 -->